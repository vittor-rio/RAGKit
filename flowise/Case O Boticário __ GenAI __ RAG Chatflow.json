{
  "nodes": [
    {
      "id": "toolAgent_0",
      "position": {
        "x": 1119.3111712258255,
        "y": 6.482209297577299
      },
      "type": "customNode",
      "data": {
        "id": "toolAgent_0",
        "label": "Tool Agent",
        "version": 2,
        "name": "toolAgent",
        "type": "AgentExecutor",
        "baseClasses": [
          "AgentExecutor",
          "BaseChain",
          "Runnable"
        ],
        "category": "Agents",
        "description": "Agent that uses Function Calling to pick the tools and args to call",
        "inputParams": [
          {
            "label": "System Message",
            "name": "systemMessage",
            "type": "string",
            "default": "You are a helpful AI assistant.",
            "description": "If Chat Prompt Template is provided, this will be ignored",
            "rows": 4,
            "optional": true,
            "additionalParams": true,
            "id": "toolAgent_0-input-systemMessage-string"
          },
          {
            "label": "Max Iterations",
            "name": "maxIterations",
            "type": "number",
            "optional": true,
            "additionalParams": true,
            "id": "toolAgent_0-input-maxIterations-number"
          }
        ],
        "inputAnchors": [
          {
            "label": "Tools",
            "name": "tools",
            "type": "Tool",
            "list": true,
            "id": "toolAgent_0-input-tools-Tool"
          },
          {
            "label": "Memory",
            "name": "memory",
            "type": "BaseChatMemory",
            "id": "toolAgent_0-input-memory-BaseChatMemory"
          },
          {
            "label": "Tool Calling Chat Model",
            "name": "model",
            "type": "BaseChatModel",
            "description": "Only compatible with models that are capable of function calling: ChatOpenAI, ChatMistral, ChatAnthropic, ChatGoogleGenerativeAI, ChatVertexAI, GroqChat",
            "id": "toolAgent_0-input-model-BaseChatModel"
          },
          {
            "label": "Chat Prompt Template",
            "name": "chatPromptTemplate",
            "type": "ChatPromptTemplate",
            "description": "Override existing prompt with Chat Prompt Template. Human Message must includes {input} variable",
            "optional": true,
            "id": "toolAgent_0-input-chatPromptTemplate-ChatPromptTemplate"
          },
          {
            "label": "Input Moderation",
            "description": "Detect text that could generate harmful output and prevent it from being sent to the language model",
            "name": "inputModeration",
            "type": "Moderation",
            "optional": true,
            "list": true,
            "id": "toolAgent_0-input-inputModeration-Moderation"
          }
        ],
        "inputs": {
          "tools": [
            "{{searchAPI_0.data.instance}}"
          ],
          "memory": "{{bufferMemory_0.data.instance}}",
          "model": "{{chatOpenAI_0.data.instance}}",
          "chatPromptTemplate": "{{chatPromptTemplate_0.data.instance}}",
          "systemMessage": "You are a helpful AI assistant.",
          "inputModeration": "",
          "maxIterations": ""
        },
        "outputAnchors": [
          {
            "id": "toolAgent_0-output-toolAgent-AgentExecutor|BaseChain|Runnable",
            "name": "toolAgent",
            "label": "AgentExecutor",
            "description": "Agent that uses Function Calling to pick the tools and args to call",
            "type": "AgentExecutor | BaseChain | Runnable"
          }
        ],
        "outputs": {},
        "selected": false
      },
      "width": 300,
      "height": 483,
      "selected": false,
      "positionAbsolute": {
        "x": 1119.3111712258255,
        "y": 6.482209297577299
      },
      "dragging": false
    },
    {
      "id": "chatPromptTemplate_0",
      "position": {
        "x": 309.49695049504936,
        "y": 11.940045261668985
      },
      "type": "customNode",
      "data": {
        "id": "chatPromptTemplate_0",
        "label": "Chat Prompt Template",
        "version": 2,
        "name": "chatPromptTemplate",
        "type": "ChatPromptTemplate",
        "baseClasses": [
          "ChatPromptTemplate",
          "BaseChatPromptTemplate",
          "BasePromptTemplate",
          "Runnable"
        ],
        "category": "Prompts",
        "description": "Schema to represent a chat prompt",
        "inputParams": [
          {
            "label": "System Message",
            "name": "systemMessagePrompt",
            "type": "string",
            "rows": 4,
            "placeholder": "You are a helpful assistant that translates {input_language} to {output_language}.",
            "id": "chatPromptTemplate_0-input-systemMessagePrompt-string"
          },
          {
            "label": "Human Message",
            "name": "humanMessagePrompt",
            "description": "This prompt will be added at the end of the messages as human message",
            "type": "string",
            "rows": 4,
            "placeholder": "{text}",
            "id": "chatPromptTemplate_0-input-humanMessagePrompt-string"
          },
          {
            "label": "Format Prompt Values",
            "name": "promptValues",
            "type": "json",
            "optional": true,
            "acceptVariable": true,
            "list": true,
            "id": "chatPromptTemplate_0-input-promptValues-json"
          },
          {
            "label": "Messages History",
            "name": "messageHistory",
            "description": "Add messages after System Message. This is useful when you want to provide few shot examples",
            "type": "tabs",
            "tabIdentifier": "selectedMessagesTab",
            "additionalParams": true,
            "default": "messageHistoryCode",
            "tabs": [
              {
                "label": "Add Messages (Code)",
                "name": "messageHistoryCode",
                "type": "code",
                "hideCodeExecute": true,
                "codeExample": "const { AIMessage, HumanMessage, ToolMessage } = require('@langchain/core/messages');\n\nreturn [\n    new HumanMessage(\"What is 333382 ü¶ú 1932?\"),\n    new AIMessage({\n        content: \"\",\n        tool_calls: [\n        {\n            id: \"12345\",\n            name: \"calulator\",\n            args: {\n                number1: 333382,\n                number2: 1932,\n                operation: \"divide\",\n            },\n        },\n        ],\n    }),\n    new ToolMessage({\n        tool_call_id: \"12345\",\n        content: \"The answer is 172.558.\",\n    }),\n    new AIMessage(\"The answer is 172.558.\"),\n]",
                "optional": true,
                "additionalParams": true
              }
            ],
            "id": "chatPromptTemplate_0-input-messageHistory-tabs"
          }
        ],
        "inputAnchors": [],
        "inputs": {
          "systemMessagePrompt": "Voc√™ √© o assistente de IA da plataforma ViTTor AI, atuando no sistema de chat do produto¬†ViTTor AI. Sua fun√ß√£o principal √© DIVULGAR O BOTICARIO. A Cada interacao, tente gerar curiosidade da pessoa do outro lado em algum produto do boticario com detalhes entre parenteses e ao mesmo tempo vc √© um grande conhecedor do livro resumido entre aspas:\n\n\"Esta obra explora a teoria da descend√™ncia com modifica√ß√£o, propondo que as esp√©cies evoluem ao longo do tempo por meio da sele√ß√£o natural. O texto aborda dificuldades te√≥ricas, como a raridade de formas transit√≥rias e a complexidade da adapta√ß√£o. A obra considera a imperfei√ß√£o do registro geol√≥gico, que dificulta a compreens√£o da evolu√ß√£o. A publica√ß√£o tamb√©m discute a classifica√ß√£o dos seres vivos, a import√¢ncia da morfologia, da embriologia e de √≥rg√£os rudimentares. O autor argumenta que a sele√ß√£o natural atua preservando varia√ß√µes vantajosas, levando √† diversifica√ß√£o das esp√©cies e √† extin√ß√£o de outras.\"\n\n(\n\nP√°gina Inicial\nSobre N√≥s\nA NOSSA HIST√ìRIA\nEm Portugal\nEm Setembro de 1986, O Botic√°rio abriu a primeira loja em Portugal, no Centro Comercial das Amoreiras. Tendo sido pioneiro em lojas exclusivas de perfumaria e cosm√©tica, em pouco tempo a marca tornou-se muito conhecida e querida dos portugueses, fazendo, cada vez mais, parte do seu dia a dia.\n\n\nHoje, 37 anos depois, O Botic√°rio tem 60 lojas f√≠sicas em Portugal, esta loja online - na qual estamos muito contentes por te receber -, e uma grande rede de revendedores perto de ti.\n\nA NOSSA ESS√äNCIA\nO Botic√°rio √© uma marca que envolve AMOR em tudo o que faz. Os nossos produtos convidam a amar mais ‚Äì seja o amor pr√≥prio, sejam hist√≥rias reais de amor que n√£o nos cansamos de contar. Transformamos sentimentos em produtos com ‚Äúsegredinhos‚Äù trazidos por mat√©rias primas e t√©cnicas de fabrico √∫nicas e cheias de inova√ß√£o. A proximidade est√° no nosso ADN e sente-se em todos os touch points da marca: nas nossas 60 lojas f√≠sicas; na rela√ß√£o com a nossa rede, cada vez maior, de revendedores; na rela√ß√£o com quem nos compra aqui na nossa loja online ou nos segue nas redes sociais, e no cuidado com os nossos colaboradores onde toda a hist√≥ria come√ßa.\n\nAlquimia, Foco no cliente, Relacionamento, Verdade e Inova√ß√£o sem nunca perder o respeito pela nossa hist√≥ria e pela nossa ess√™ncia s√£o ingredientes preciosos para que tudo flua de forma genu√≠na numa marca que j√° ‚Äúmora‚Äù feliz h√° 35 anos no mercado portugu√™s.\n\n#oboticariopt #OndeTemAmorTemBeleza\nFica sempre connosco. O Botic√°rio\n\nAS GRANDES HIST√ìRIAS COME√áAM SEMPRE DA FORMA MAIS SIMPLES!\nHist√≥ria do in√≠cio da marca no Brasil\nO Botic√°rio √© a antiga denomina√ß√£o de \"farmac√™utico‚Äù e foi o nome adotado por Miguel Krigsner para a sua farm√°cia de manipula√ß√£o que abriu portas a 22 de mar√ßo de 1977 no centro da cidade de Curitiba, no estado do Paran√°. A ideia surgiu ap√≥s um curso em Porto Alegre, no qual Krigsner participou e onde a manipula√ß√£o artesanal de medicamentos come√ßava a ser redescoberta, dando ao paciente uma op√ß√£o de tratamento personalizado, principalmente dentro da dermatologia. Mais do que uma simples farm√°cia, teria de ser um local muito agrad√°vel no qual as pessoas se sentissem bem. Em vez dos balc√µes cheios de rem√©dios, a loja tinha uma sala alcatifada, sof√°, revistas e caf√© para aqueles que quisessem aguardar pela prepara√ß√£o da sua receita. Come√ßava assim o atendimento especial que a marca mant√©m e aprimora at√© hoje.\n\nNa farm√°cia de manipula√ß√£o onde come√ßou a hist√≥ria d'O Botic√°rio, ao inv√©s dos habituais faurmac√™uticos, estavam ao balc√£o os pr√≥prios propriet√°rios, transmitindo uma imagem de seriedade e confian√ßa. Em pouco tempo e principalmente devido ao \"boca a boca‚Äù, as pessoas come√ßavam a procurar mais estes produtos, que j√° eram sin√≥nimos de qualidade. Foi neste contexto que Miguel Krigsner partiu, depois da manipula√ß√£o de receitas, para a produ√ß√£o de produtos com a marca O Botic√°rio. Come√ßou por bater os cremes numa batedeira que a irm√£ tinha recebido como presente de casamento, e assim nasceram os primeiros produtos - um creme hidratante, um shampoo e uma espuma de banho √† base de algas marinhas, e a primeira col√≥nia da marca: a at√© hoje famosa Acqua Fresca.\n\nEm 1979, j√° com v√°rios produtos da marca O Botic√°rio e com aquele atendimento especial, abriu a 1¬™ loja exclusiva da marca no aeroporto de Curitiba, que rapidamente se tornou numa especialidade de perfumaria e Cosm√©tica desejada por todos os outros Estados do Brasil e muito divulgada e transportada pelas tripula√ß√µes que passavam e se encantavam com aquela loja especial.\n\nAlguns anos depois, esta pequena farm√°cia de outrora deu lugar √† maior rede de Perfumaria e Cosm√©tica do Mundo, com mais de 3.600 lojas no Brasil e cerca de 600 pontos de venda noutros pa√≠ses.\n\nCONHE√áA: FUNDA√á√ÉO GRUPO BOTIC√ÅRIO\n\nProteger a vida conservando a natureza, essa √© a nossa miss√£o.Visitar Site\n\nOBRIGADO\nPOR ACREDITARES NA NOSSA\nMISS√ÉO DE BELEZA\nVencemos o Pr√©mio Escolha do Consumidor na categoria Fragr√¢ncias e o Pr√©mio Cinco Estrelas pelo 7.¬∫ ano consecutivo\n\n\nINSCREVE-TE NA NOSSA NEWSLETTER E GANHA 20% NO TEU PRIMEIRO PEDIDO.\nFica a saber em primeira m√£o das ofertas especiais, novos produtos, lan√ßamentos, ideias de presentes e muito mais.\n\nEscreve o teu e-mail\n Aceito receber novidades, dicas e promo√ß√µes do O Botic√°rio. Estou ciente que este cup√£o √© v√°lido apenas para a primeira compra. N√£o acumul√°vel com outros cup√µes e/ou promo√ß√µes.\n\nQuero subscrever\nAVALIA√á√ïES\nOpini√µes Verificadas dos clientes 4.5 de 5\nLivro de reclama√ß√µes\nSEGURAN√áA\nSite 100% seguro, site seguro by google, secured by geotrust\nCRUELTY\ncruelty free international\nPR√âMIOS\n)",
          "humanMessagePrompt": "{text}",
          "promptValues": "{\"text\":\"{{question}}\"}",
          "messageHistory": "messageHistoryCode"
        },
        "outputAnchors": [
          {
            "id": "chatPromptTemplate_0-output-chatPromptTemplate-ChatPromptTemplate|BaseChatPromptTemplate|BasePromptTemplate|Runnable",
            "name": "chatPromptTemplate",
            "label": "ChatPromptTemplate",
            "description": "Schema to represent a chat prompt",
            "type": "ChatPromptTemplate | BaseChatPromptTemplate | BasePromptTemplate | Runnable"
          }
        ],
        "outputs": {},
        "selected": false
      },
      "width": 300,
      "height": 738,
      "selected": false,
      "positionAbsolute": {
        "x": 309.49695049504936,
        "y": 11.940045261668985
      },
      "dragging": false
    },
    {
      "id": "chatOpenAI_0",
      "position": {
        "x": 1624.9101998289073,
        "y": 179.6557052336634
      },
      "type": "customNode",
      "data": {
        "id": "chatOpenAI_0",
        "label": "ChatOpenAI",
        "version": 7,
        "name": "chatOpenAI",
        "type": "ChatOpenAI",
        "baseClasses": [
          "ChatOpenAI",
          "BaseChatModel",
          "BaseLanguageModel",
          "Runnable"
        ],
        "category": "Chat Models",
        "description": "Wrapper around OpenAI large language models that use the Chat endpoint",
        "inputParams": [
          {
            "label": "Connect Credential",
            "name": "credential",
            "type": "credential",
            "credentialNames": [
              "openAIApi"
            ],
            "id": "chatOpenAI_0-input-credential-credential"
          },
          {
            "label": "Model Name",
            "name": "modelName",
            "type": "asyncOptions",
            "loadMethod": "listModels",
            "default": "gpt-3.5-turbo",
            "id": "chatOpenAI_0-input-modelName-asyncOptions"
          },
          {
            "label": "Temperature",
            "name": "temperature",
            "type": "number",
            "step": 0.1,
            "default": 0.9,
            "optional": true,
            "id": "chatOpenAI_0-input-temperature-number"
          },
          {
            "label": "Max Tokens",
            "name": "maxTokens",
            "type": "number",
            "step": 1,
            "optional": true,
            "additionalParams": true,
            "id": "chatOpenAI_0-input-maxTokens-number"
          },
          {
            "label": "Top Probability",
            "name": "topP",
            "type": "number",
            "step": 0.1,
            "optional": true,
            "additionalParams": true,
            "id": "chatOpenAI_0-input-topP-number"
          },
          {
            "label": "Frequency Penalty",
            "name": "frequencyPenalty",
            "type": "number",
            "step": 0.1,
            "optional": true,
            "additionalParams": true,
            "id": "chatOpenAI_0-input-frequencyPenalty-number"
          },
          {
            "label": "Presence Penalty",
            "name": "presencePenalty",
            "type": "number",
            "step": 0.1,
            "optional": true,
            "additionalParams": true,
            "id": "chatOpenAI_0-input-presencePenalty-number"
          },
          {
            "label": "Timeout",
            "name": "timeout",
            "type": "number",
            "step": 1,
            "optional": true,
            "additionalParams": true,
            "id": "chatOpenAI_0-input-timeout-number"
          },
          {
            "label": "BasePath",
            "name": "basepath",
            "type": "string",
            "optional": true,
            "additionalParams": true,
            "id": "chatOpenAI_0-input-basepath-string"
          },
          {
            "label": "Proxy Url",
            "name": "proxyUrl",
            "type": "string",
            "optional": true,
            "additionalParams": true,
            "id": "chatOpenAI_0-input-proxyUrl-string"
          },
          {
            "label": "Stop Sequence",
            "name": "stopSequence",
            "type": "string",
            "rows": 4,
            "optional": true,
            "description": "List of stop words to use when generating. Use comma to separate multiple stop words.",
            "additionalParams": true,
            "id": "chatOpenAI_0-input-stopSequence-string"
          },
          {
            "label": "BaseOptions",
            "name": "baseOptions",
            "type": "json",
            "optional": true,
            "additionalParams": true,
            "id": "chatOpenAI_0-input-baseOptions-json"
          },
          {
            "label": "Allow Image Uploads",
            "name": "allowImageUploads",
            "type": "boolean",
            "description": "Automatically uses gpt-4-vision-preview when image is being uploaded from chat. Only works with LLMChain, Conversation Chain, ReAct Agent, Conversational Agent, Tool Agent",
            "default": false,
            "optional": true,
            "id": "chatOpenAI_0-input-allowImageUploads-boolean"
          },
          {
            "label": "Image Resolution",
            "description": "This parameter controls the resolution in which the model views the image.",
            "name": "imageResolution",
            "type": "options",
            "options": [
              {
                "label": "Low",
                "name": "low"
              },
              {
                "label": "High",
                "name": "high"
              },
              {
                "label": "Auto",
                "name": "auto"
              }
            ],
            "default": "low",
            "optional": false,
            "additionalParams": true,
            "id": "chatOpenAI_0-input-imageResolution-options"
          }
        ],
        "inputAnchors": [
          {
            "label": "Cache",
            "name": "cache",
            "type": "BaseCache",
            "optional": true,
            "id": "chatOpenAI_0-input-cache-BaseCache"
          }
        ],
        "inputs": {
          "cache": "",
          "modelName": "gpt-4o-mini",
          "temperature": 0.9,
          "maxTokens": "",
          "topP": "",
          "frequencyPenalty": "",
          "presencePenalty": "",
          "timeout": "",
          "basepath": "",
          "proxyUrl": "",
          "stopSequence": "",
          "baseOptions": "",
          "allowImageUploads": true,
          "imageResolution": "low"
        },
        "outputAnchors": [
          {
            "id": "chatOpenAI_0-output-chatOpenAI-ChatOpenAI|BaseChatModel|BaseLanguageModel|Runnable",
            "name": "chatOpenAI",
            "label": "ChatOpenAI",
            "description": "Wrapper around OpenAI large language models that use the Chat endpoint",
            "type": "ChatOpenAI | BaseChatModel | BaseLanguageModel | Runnable"
          }
        ],
        "outputs": {},
        "selected": false
      },
      "width": 300,
      "height": 667,
      "selected": false,
      "positionAbsolute": {
        "x": 1624.9101998289073,
        "y": 179.6557052336634
      },
      "dragging": false
    },
    {
      "id": "webBrowser_0",
      "position": {
        "x": 1667.5561621299132,
        "y": -526.9260982934053
      },
      "type": "customNode",
      "data": {
        "id": "webBrowser_0",
        "label": "Web Browser",
        "version": 1,
        "name": "webBrowser",
        "type": "WebBrowser",
        "baseClasses": [
          "WebBrowser",
          "Tool",
          "StructuredTool",
          "Runnable"
        ],
        "category": "Tools",
        "description": "Gives agent the ability to visit a website and extract information",
        "inputParams": [],
        "inputAnchors": [
          {
            "label": "Language Model",
            "name": "model",
            "type": "BaseLanguageModel",
            "id": "webBrowser_0-input-model-BaseLanguageModel"
          },
          {
            "label": "Embeddings",
            "name": "embeddings",
            "type": "Embeddings",
            "id": "webBrowser_0-input-embeddings-Embeddings"
          }
        ],
        "inputs": {
          "model": "{{chatOpenAI_0.data.instance}}",
          "embeddings": "{{openAIEmbeddings_0.data.instance}}"
        },
        "outputAnchors": [
          {
            "id": "webBrowser_0-output-webBrowser-WebBrowser|Tool|StructuredTool|Runnable",
            "name": "webBrowser",
            "label": "WebBrowser",
            "description": "Gives agent the ability to visit a website and extract information",
            "type": "WebBrowser | Tool | StructuredTool | Runnable"
          }
        ],
        "outputs": {},
        "selected": false
      },
      "width": 300,
      "height": 279,
      "selected": false,
      "positionAbsolute": {
        "x": 1667.5561621299132,
        "y": -526.9260982934053
      },
      "dragging": false
    },
    {
      "id": "openAIEmbeddings_0",
      "position": {
        "x": 2146.123833558146,
        "y": -88.77027251385687
      },
      "type": "customNode",
      "data": {
        "id": "openAIEmbeddings_0",
        "label": "OpenAI Embeddings",
        "version": 4,
        "name": "openAIEmbeddings",
        "type": "OpenAIEmbeddings",
        "baseClasses": [
          "OpenAIEmbeddings",
          "Embeddings"
        ],
        "category": "Embeddings",
        "description": "OpenAI API to generate embeddings for a given text",
        "inputParams": [
          {
            "label": "Connect Credential",
            "name": "credential",
            "type": "credential",
            "credentialNames": [
              "openAIApi"
            ],
            "id": "openAIEmbeddings_0-input-credential-credential"
          },
          {
            "label": "Model Name",
            "name": "modelName",
            "type": "asyncOptions",
            "loadMethod": "listModels",
            "default": "text-embedding-ada-002",
            "id": "openAIEmbeddings_0-input-modelName-asyncOptions"
          },
          {
            "label": "Strip New Lines",
            "name": "stripNewLines",
            "type": "boolean",
            "optional": true,
            "additionalParams": true,
            "id": "openAIEmbeddings_0-input-stripNewLines-boolean"
          },
          {
            "label": "Batch Size",
            "name": "batchSize",
            "type": "number",
            "optional": true,
            "additionalParams": true,
            "id": "openAIEmbeddings_0-input-batchSize-number"
          },
          {
            "label": "Timeout",
            "name": "timeout",
            "type": "number",
            "optional": true,
            "additionalParams": true,
            "id": "openAIEmbeddings_0-input-timeout-number"
          },
          {
            "label": "BasePath",
            "name": "basepath",
            "type": "string",
            "optional": true,
            "additionalParams": true,
            "id": "openAIEmbeddings_0-input-basepath-string"
          },
          {
            "label": "Dimensions",
            "name": "dimensions",
            "type": "number",
            "optional": true,
            "additionalParams": true,
            "id": "openAIEmbeddings_0-input-dimensions-number"
          }
        ],
        "inputAnchors": [],
        "inputs": {
          "modelName": "text-embedding-3-small",
          "stripNewLines": "",
          "batchSize": "",
          "timeout": "",
          "basepath": "",
          "dimensions": ""
        },
        "outputAnchors": [
          {
            "id": "openAIEmbeddings_0-output-openAIEmbeddings-OpenAIEmbeddings|Embeddings",
            "name": "openAIEmbeddings",
            "label": "OpenAIEmbeddings",
            "description": "OpenAI API to generate embeddings for a given text",
            "type": "OpenAIEmbeddings | Embeddings"
          }
        ],
        "outputs": {},
        "selected": false
      },
      "width": 300,
      "height": 421,
      "selected": false,
      "dragging": false,
      "positionAbsolute": {
        "x": 2146.123833558146,
        "y": -88.77027251385687
      }
    },
    {
      "id": "bufferMemory_0",
      "position": {
        "x": 555.9252773417634,
        "y": -480.7206208770498
      },
      "type": "customNode",
      "data": {
        "id": "bufferMemory_0",
        "label": "Buffer Memory",
        "version": 2,
        "name": "bufferMemory",
        "type": "BufferMemory",
        "baseClasses": [
          "BufferMemory",
          "BaseChatMemory",
          "BaseMemory"
        ],
        "category": "Memory",
        "description": "Retrieve chat messages stored in database",
        "inputParams": [
          {
            "label": "Session Id",
            "name": "sessionId",
            "type": "string",
            "description": "If not specified, a random id will be used. Learn <a target=\"_blank\" href=\"https://docs.flowiseai.com/memory#ui-and-embedded-chat\">more</a>",
            "default": "",
            "additionalParams": true,
            "optional": true,
            "id": "bufferMemory_0-input-sessionId-string"
          },
          {
            "label": "Memory Key",
            "name": "memoryKey",
            "type": "string",
            "default": "chat_history",
            "additionalParams": true,
            "id": "bufferMemory_0-input-memoryKey-string"
          }
        ],
        "inputAnchors": [],
        "inputs": {
          "sessionId": "",
          "memoryKey": "chat_history"
        },
        "outputAnchors": [
          {
            "id": "bufferMemory_0-output-bufferMemory-BufferMemory|BaseChatMemory|BaseMemory",
            "name": "bufferMemory",
            "label": "BufferMemory",
            "description": "Retrieve chat messages stored in database",
            "type": "BufferMemory | BaseChatMemory | BaseMemory"
          }
        ],
        "outputs": {},
        "selected": false
      },
      "width": 300,
      "height": 249,
      "positionAbsolute": {
        "x": 555.9252773417634,
        "y": -480.7206208770498
      },
      "selected": false
    },
    {
      "id": "searchAPI_0",
      "position": {
        "x": 1046.6635360799917,
        "y": -389.5939494739515
      },
      "type": "customNode",
      "data": {
        "id": "searchAPI_0",
        "label": "SearchApi",
        "version": 1,
        "name": "searchAPI",
        "type": "SearchAPI",
        "baseClasses": [
          "SearchAPI",
          "Tool",
          "StructuredTool",
          "Runnable"
        ],
        "category": "Tools",
        "description": "Real-time API for accessing Google Search data",
        "inputParams": [
          {
            "label": "Connect Credential",
            "name": "credential",
            "type": "credential",
            "credentialNames": [
              "searchApi"
            ],
            "id": "searchAPI_0-input-credential-credential"
          }
        ],
        "inputAnchors": [],
        "inputs": {},
        "outputAnchors": [
          {
            "id": "searchAPI_0-output-searchAPI-SearchAPI|Tool|StructuredTool|Runnable",
            "name": "searchAPI",
            "label": "SearchAPI",
            "description": "Real-time API for accessing Google Search data",
            "type": "SearchAPI | Tool | StructuredTool | Runnable"
          }
        ],
        "outputs": {},
        "selected": false
      },
      "width": 300,
      "height": 274,
      "selected": false,
      "dragging": false,
      "positionAbsolute": {
        "x": 1046.6635360799917,
        "y": -389.5939494739515
      }
    }
  ],
  "edges": [
    {
      "source": "chatPromptTemplate_0",
      "sourceHandle": "chatPromptTemplate_0-output-chatPromptTemplate-ChatPromptTemplate|BaseChatPromptTemplate|BasePromptTemplate|Runnable",
      "target": "toolAgent_0",
      "targetHandle": "toolAgent_0-input-chatPromptTemplate-ChatPromptTemplate",
      "type": "buttonedge",
      "id": "chatPromptTemplate_0-chatPromptTemplate_0-output-chatPromptTemplate-ChatPromptTemplate|BaseChatPromptTemplate|BasePromptTemplate|Runnable-toolAgent_0-toolAgent_0-input-chatPromptTemplate-ChatPromptTemplate"
    },
    {
      "source": "chatOpenAI_0",
      "sourceHandle": "chatOpenAI_0-output-chatOpenAI-ChatOpenAI|BaseChatModel|BaseLanguageModel|Runnable",
      "target": "toolAgent_0",
      "targetHandle": "toolAgent_0-input-model-BaseChatModel",
      "type": "buttonedge",
      "id": "chatOpenAI_0-chatOpenAI_0-output-chatOpenAI-ChatOpenAI|BaseChatModel|BaseLanguageModel|Runnable-toolAgent_0-toolAgent_0-input-model-BaseChatModel"
    },
    {
      "source": "chatOpenAI_0",
      "sourceHandle": "chatOpenAI_0-output-chatOpenAI-ChatOpenAI|BaseChatModel|BaseLanguageModel|Runnable",
      "target": "webBrowser_0",
      "targetHandle": "webBrowser_0-input-model-BaseLanguageModel",
      "type": "buttonedge",
      "id": "chatOpenAI_0-chatOpenAI_0-output-chatOpenAI-ChatOpenAI|BaseChatModel|BaseLanguageModel|Runnable-webBrowser_0-webBrowser_0-input-model-BaseLanguageModel"
    },
    {
      "source": "openAIEmbeddings_0",
      "sourceHandle": "openAIEmbeddings_0-output-openAIEmbeddings-OpenAIEmbeddings|Embeddings",
      "target": "webBrowser_0",
      "targetHandle": "webBrowser_0-input-embeddings-Embeddings",
      "type": "buttonedge",
      "id": "openAIEmbeddings_0-openAIEmbeddings_0-output-openAIEmbeddings-OpenAIEmbeddings|Embeddings-webBrowser_0-webBrowser_0-input-embeddings-Embeddings"
    },
    {
      "source": "bufferMemory_0",
      "sourceHandle": "bufferMemory_0-output-bufferMemory-BufferMemory|BaseChatMemory|BaseMemory",
      "target": "toolAgent_0",
      "targetHandle": "toolAgent_0-input-memory-BaseChatMemory",
      "type": "buttonedge",
      "id": "bufferMemory_0-bufferMemory_0-output-bufferMemory-BufferMemory|BaseChatMemory|BaseMemory-toolAgent_0-toolAgent_0-input-memory-BaseChatMemory"
    },
    {
      "source": "searchAPI_0",
      "sourceHandle": "searchAPI_0-output-searchAPI-SearchAPI|Tool|StructuredTool|Runnable",
      "target": "toolAgent_0",
      "targetHandle": "toolAgent_0-input-tools-Tool",
      "type": "buttonedge",
      "id": "searchAPI_0-searchAPI_0-output-searchAPI-SearchAPI|Tool|StructuredTool|Runnable-toolAgent_0-toolAgent_0-input-tools-Tool"
    }
  ]
}